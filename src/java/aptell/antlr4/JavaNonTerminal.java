package aptell.antlr4;

public enum JavaNonTerminal {

  // Common
  Annotation(1),
  AnnotationTypeBody(2),
  AnnotationTypeDeclaration(3),
  AnnotationTypeElementDeclaration(4),
  ArrayInitializer(5),
  Block(6),
  BlockStatement(7),
  CatchClause(8),
  CatchType(9),
  ClassBody(10),
  ClassBodyDeclaration(11),
  ClassDeclaration(12),
  ClassOrInterfaceType(13),
  ClassType(14),
  CompilationUnit(15),
  ConstructorDeclaration(16),
  DefaultValue(17),
  ElementValue(18),
  ElementValueArrayInitializer(19),
  ElementValuePair(20),
  EnumBodyDeclarations(21),
  EnumConstant(22),
  EnumDeclaration(23),
  Expression(24),
  FieldDeclaration(25),
  ForInit(26),
  FormalParameter(27),
  FormalParameterList(28),
  FormalParameters(29),
  ImportDeclaration(30),
  InterfaceBody(31),
  InterfaceDeclaration(32),
  InterfaceMemberDeclaration(33),
  InterfaceMethodDeclaration(34),
  InterfaceMethodModifier(35),
  LambdaBody(36),
  LambdaExpression(37),
  LambdaParameters(38),
  LastFormalParameter(39),
  Literal(40),
  LocalVariableDeclaration(41),
  MethodBody(42),
  MethodDeclaration(43),
  PackageDeclaration(44),
  Primary(45),
  PrimitiveType(46),
  Resource(47),
  ResourceSpecification(48),
  Statement(49),
  SwitchBlockStatementGroup(50),
  SwitchLabel(51),
  TypeArgument(52),
  TypeArguments(53),
  TypeArgumentsOrDiamond(54),
  TypeBound(55),
  TypeDeclaration(56),
  TypeParameter(57),
  TypeParameters(58),
  VariableDeclarator(59),
  VariableDeclaratorId(60),
  VariableInitializer(61),
  VariableModifier(62),

  // Java 8
  AnnotationConstantRest(63),
  AnnotationMethodOrConstantRest(64),
  AnnotationMethodRest(65),
  AnnotationTypeElementRest(66),
  Arguments(67),
  ArrayCreatorRest(68),
  ClassCreatorRest(69),
  ClassOrInterfaceModifier(70),
  ConstDeclaration(71),
  ConstantDeclarator(72),
  CreatedName(73),
  Creator(74),
  ElementValuePairs(75),
  EnhancedForControl(76),
  EnumConstants(77),
  EveryRule(78),
  ExplicitGenericInvocation(79),
  ExplicitGenericInvocationSuffix(80),
  ExpressionList(81),
  FinallyBlock(82),
  FloatLiteral(83),
  ForControl(84),
  GenericConstructorDeclaration(85),
  GenericInterfaceMethodDeclaration(86),
  GenericMethodDeclaration(87),
  InnerCreator(88),
  IntegerLiteral(89),
  InterfaceBodyDeclaration(90),
  LocalTypeDeclaration(91),
  MemberDeclaration(92),
  Modifier(93),
  NonWildcardTypeArguments(94),
  NonWildcardTypeArgumentsOrDiamond(95),
  ParExpression(96),
  QualifiedName(97),
  QualifiedNameList(98),
  Resources(99),
  SuperSuffix(100),
  TypeList(101),
  TypeType(102),
  TypeTypeOrVoid(103),
  VariableDeclarators(104),

  // Java 9
  AdditionalBound(105),
  AdditiveExpression(106),
  AmbiguousName(107),
  AndExpression(108),
  AnnotationTypeElementModifier(109),
  AnnotationTypeMemberDeclaration(110),
  ArgumentList(111),
  ArrayAccess(112),
  ArrayAccess_lf_primary(113),
  ArrayAccess_lfno_primary(114),
  ArrayCreationExpression(115),
  ArrayType(116),
  AssertStatement(117),
  Assignment(118),
  AssignmentExpression(119),
  AssignmentOperator(120),
  BasicForStatement(121),
  BasicForStatementNoShortIf(122),
  BlockStatements(123),
  BreakStatement(124),
  CastExpression(125),
  CatchFormalParameter(126),
  Catches(127),
  ClassInstanceCreationExpression(128),
  ClassInstanceCreationExpression_lf_primary(129),
  ClassInstanceCreationExpression_lfno_primary(130),
  ClassLiteral(131),
  ClassMemberDeclaration(132),
  ClassModifier(133),
  ClassType_lf_classOrInterfaceType(134),
  ClassType_lfno_classOrInterfaceType(135),
  ConditionalAndExpression(136),
  ConditionalExpression(137),
  ConditionalOrExpression(138),
  ConstantDeclaration(139),
  ConstantExpression(140),
  ConstantModifier(141),
  ConstructorBody(142),
  ConstructorDeclarator(143),
  ConstructorModifier(144),
  ContinueStatement(145),
  DimExpr(146),
  DimExprs(147),
  Dims(148),
  DoStatement(149),
  ElementValueList(150),
  ElementValuePairList(151),
  EmptyStatement(152),
  EnhancedForStatement(153),
  EnhancedForStatementNoShortIf(154),
  EnumBody(155),
  EnumConstantList(156),
  EnumConstantModifier(157),
  EnumConstantName(158),
  EqualityExpression(159),
  ExceptionType(160),
  ExceptionTypeList(161),
  ExclusiveOrExpression(162),
  ExplicitConstructorInvocation(163),
  ExpressionName(164),
  ExpressionStatement(165),
  ExtendsInterfaces(166),
  FieldAccess(167),
  FieldAccess_lf_primary(168),
  FieldAccess_lfno_primary(169),
  FieldModifier(170),
  Finally_(171),
  FloatingPointType(172),
  ForStatement(173),
  ForStatementNoShortIf(174),
  ForUpdate(175),
  IfThenElseStatement(176),
  IfThenElseStatementNoShortIf(177),
  IfThenStatement(178),
  InclusiveOrExpression(179),
  InferredFormalParameterList(180),
  InstanceInitializer(181),
  IntegralType(182),
  InterfaceModifier(183),
  InterfaceType(184),
  InterfaceTypeList(185),
  InterfaceType_lf_classOrInterfaceType(186),
  InterfaceType_lfno_classOrInterfaceType(187),
  LabeledStatement(188),
  LabeledStatementNoShortIf(189),
  LeftHandSide(190),
  LocalVariableDeclarationStatement(191),
  MarkerAnnotation(192),
  MethodDeclarator(193),
  MethodHeader(194),
  MethodInvocation(195),
  MethodInvocation_lf_primary(196),
  MethodInvocation_lfno_primary(197),
  MethodModifier(198),
  MethodName(199),
  MethodReference(200),
  MethodReference_lf_primary(201),
  MethodReference_lfno_primary(202),
  ModularCompilation(203),
  ModuleDeclaration(204),
  ModuleDirective(205),
  ModuleName(206),
  MultiplicativeExpression(207),
  NormalAnnotation(208),
  NormalClassDeclaration(209),
  NormalInterfaceDeclaration(210),
  NumericType(211),
  OrdinaryCompilation(212),
  PackageModifier(213),
  PackageName(214),
  PackageOrTypeName(215),
  PostDecrementExpression(216),
  PostDecrementExpression_lf_postfixExpression(217),
  PostIncrementExpression(218),
  PostIncrementExpression_lf_postfixExpression(219),
  PostfixExpression(220),
  PreDecrementExpression(221),
  PreIncrementExpression(222),
  PrimaryNoNewArray(223),
  PrimaryNoNewArray_lf_arrayAccess(224),
  PrimaryNoNewArray_lf_primary(225),
  PrimaryNoNewArray_lf_primary_lf_arrayAccess_lf_primary(226),
  PrimaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary(227),
  PrimaryNoNewArray_lfno_arrayAccess(228),
  PrimaryNoNewArray_lfno_primary(229),
  PrimaryNoNewArray_lfno_primary_lf_arrayAccess_lfno_primary(230),
  PrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary(231),
  ReceiverParameter(232),
  ReferenceType(233),
  RelationalExpression(234),
  RequiresModifier(235),
  ResourceList(236),
  Result(237),
  ReturnStatement(238),
  ShiftExpression(239),
  SimpleTypeName(240),
  SingleElementAnnotation(241),
  SingleStaticImportDeclaration(242),
  SingleTypeImportDeclaration(243),
  StatementExpression(244),
  StatementExpressionList(245),
  StatementNoShortIf(246),
  StatementWithoutTrailingSubstatement(247),
  StaticImportOnDemandDeclaration(248),
  StaticInitializer(249),
  Superclass(250),
  Superinterfaces(251),
  SwitchBlock(252),
  SwitchLabels(253),
  SwitchStatement(254),
  SynchronizedStatement(255),
  ThrowStatement(256),
  Throws_(257),
  TryStatement(258),
  TryWithResourcesStatement(259),
  Type(260),
  TypeArgumentList(261),
  TypeImportOnDemandDeclaration(262),
  TypeName(263),
  TypeParameterList(264),
  TypeParameterModifier(265),
  TypeVariable(266),
  UnannArrayType(267),
  UnannClassOrInterfaceType(268),
  UnannClassType(269),
  UnannClassType_lf_unannClassOrInterfaceType(270),
  UnannClassType_lfno_unannClassOrInterfaceType(271),
  UnannInterfaceType(272),
  UnannInterfaceType_lf_unannClassOrInterfaceType(273),
  UnannInterfaceType_lfno_unannClassOrInterfaceType(274),
  UnannPrimitiveType(275),
  UnannReferenceType(276),
  UnannType(277),
  UnannTypeVariable(278),
  UnaryExpression(279),
  UnaryExpressionNotPlusMinus(280),
  VariableAccess(281),
  VariableDeclaratorList(282),
  VariableInitializerList(283),
  WhileStatement(284),
  WhileStatementNoShortIf(285),
  Wildcard(286),
  WildcardBounds(287);

  public final int code;

  JavaNonTerminal(int code) {
    this.code = code;
  }


}
